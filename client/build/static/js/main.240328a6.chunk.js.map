{"version":3,"sources":["home/Home.js","components/Nav.js","components/Stats.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","onChange","event","setState","target","name","value","onSubmit","long","state","axios","post","headers","then","res","console","log","submitted","isMini","status","href","data","miniurl","className","styles","paddingBottom","style","Header","as","Form","this","Input","type","fluid","placeholder","onClick","Component","Nav","activeItem","Menu","Item","active","to","Stats","substring","length","catch","e","response","hits","App","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.240328a6.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from \"axios\"\r\nimport { Header, Form, Input } from 'semantic-ui-react'\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      long: '',\r\n      res: '',\r\n      submitted: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {long} = this.state \r\n\r\n    if (long) {\r\n      axios.post(\r\n        '/api/new',\r\n        {long},\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      ).then(res => {\r\n        console.log(res)\r\n        this.setState({res: res, submitted: true})\r\n      })\r\n    }\r\n  }\r\n\r\n  isMini = () => {\r\n    let res = this.state.res\r\n    console.log(this.state)\r\n    if(!this.state.submitted){\r\n      return\r\n    }\r\n    if (res.status === 200) {\r\n      return (\r\n        <p><strong>MiniURL: </strong><a href={\"http://\"+res.data.miniurl}>{res.data.miniurl}</a></p>\r\n      )\r\n    } else if(!this.state.submitted){\r\n      return\r\n    } else {\r\n      return (\r\n        <div className='ui negative message'>\r\n          <i className='close icon'></i>\r\n          <div className='header'>\r\n            An error occured\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      paddingBottom: '2em',\r\n    }\r\n\r\n    return (    \r\n      <div>\r\n        <div className='row' style={styles}>\r\n          <Header className='header' as='h1'>\r\n            MiniURL\r\n          </Header>\r\n        </div>\r\n        <div className='row' style={styles}>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input type='text' name='long' value={this.state.long} onChange={this.onChange} fluid placeholder='Enter URL' />\r\n          </Form>\r\n        </div>\r\n        <button onClick={this.onSubmit}>Minify</button>\r\n        {this.isMini()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Nav extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          name='Home'\r\n          active={activeItem === 'home'}\r\n        >\r\n          <Link to='/'>Home</Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name='Statistics'\r\n          active={activeItem === 'stats'}\r\n        >\r\n          <Link to='/stats'>Statistics</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport axios from \"axios\"\r\nimport { Header, Form, Input } from 'semantic-ui-react'\r\n\r\nclass Stats extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      miniurl: '',\r\n      res: '',\r\n      hits: '',\r\n      submitted: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    let {miniurl} = this.state \r\n    miniurl = miniurl.substring(miniurl.length-6, miniurl.length)\r\n    \r\n    if (miniurl) {\r\n      axios.post(\r\n        '/api/current',\r\n        {miniurl},\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      ).then(res => {\r\n        this.setState({res: res, submitted: true})\r\n      }).catch(e => {\r\n        if(e.response) {\r\n          this.setState({res: e.response, submitted: true})\r\n        }\r\n        else {\r\n          this.setState({submitted: true})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  isMini = () => {\r\n    let res = this.state.res\r\n    if(!this.state.submitted){\r\n      return\r\n    }\r\n    if (res.status === 200) {\r\n      console.log(res.data)\r\n      return (\r\n        <div>\r\n          <p><strong>MiniURL: </strong><a href={res.data.miniurl}>{res.data.miniurl}</a></p>\r\n          <p><strong>Original URL: </strong><a href={res.data.long}>{res.data.long}</a></p>\r\n          <p><strong>Hits: </strong>{res.data.hits}</p>\r\n        </div>\r\n        \r\n      )\r\n    }else if (res.status === 404) {\r\n      return (\r\n        <div className='ui negative message'>\r\n          <i className='close icon'></i>\r\n          <div className='header'>\r\n            Could not find that MiniURL\r\n          </div>\r\n        </div>\r\n      )\r\n    } else if(!this.state.submitted){\r\n      return\r\n    } else {\r\n      return (\r\n        <div className='ui negative message'>\r\n          <i className='close icon'></i>\r\n          <div className='header'>\r\n            An error occured\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      paddingBottom: '2em',\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className='row' style={styles}>\r\n          <Header className='header' as='h1'>\r\n            MiniURL Statistics\r\n          </Header>\r\n        </div>\r\n        <div className='row' style={styles}>\r\n          <Form onSubmit={this.onSubmit}>\r\n            <Input type='text' name='miniurl' value={this.state.miniurl} onChange={this.onChange} fluid placeholder='Enter miniURL' />\r\n          </Form>\r\n        </div>\r\n        <button onClick={this.onSubmit}>Get Stats</button>\r\n        {this.isMini()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport {Container} from 'semantic-ui-react'\r\nimport Home from './home/Home'\r\nimport Nav from './components/Nav'\r\nimport Stats from './components/Stats'\r\n\r\nconst App = () => {\r\n  return (\r\n      <Router>\r\n        <div>\r\n          <Nav />\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path='/' component={Home}/>\r\n              <Route exact path='/stats' component={Stats} />\r\n            </Switch>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}